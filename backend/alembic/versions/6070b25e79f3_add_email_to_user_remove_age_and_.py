"""Add email to user, remove age and unnecessary indexes

Revision ID: 6070b25e79f3
Revises: ab5b6e12907e
Create Date: 2025-03-01 21:09:45.389769

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = "6070b25e79f3"
down_revision: Union[str, None] = "ab5b6e12907e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
    )
    op.add_column("user", sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.drop_index("ix_user_age", table_name="user")
    op.drop_index("ix_user_name", table_name="user")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.drop_column("user", "age")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_index("ix_user_name", "user", ["name"], unique=False)
    op.create_index("ix_user_age", "user", ["age"], unique=False)
    op.drop_column("user", "email")
    op.drop_column("user", "last_name")
    # ### end Alembic commands ###
